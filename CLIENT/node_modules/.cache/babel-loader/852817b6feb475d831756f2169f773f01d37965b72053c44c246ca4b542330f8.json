{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable as arrayMove } from 'array-move';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport MovieSearch from '../components/common/MovieSearch';\nimport YoutubeSearch from '../components/common/YoutubeSearch';\nimport ShareWatchlist from '../components/common/ShareWatchlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableItem = sortableElement(_c = ({\n  item,\n  onDelete\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(MovieCard, {\n    id: item.id,\n    title: item.title,\n    medium: item.medium,\n    length: item.length,\n    date: item.release_date.substring(0, 4),\n    synopsis: item.synopsis,\n    image: item.image,\n    url: item.url,\n    onDelete: () => onDelete(item.id, item.medium)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this));\n_c2 = SortableItem;\nconst SortableList = sortableContainer(_c3 = ({\n  items,\n  onDelete\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SortableItem, {\n    index: index,\n    item: item,\n    onDelete: onDelete\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 5\n}, this));\n_c4 = SortableList;\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const [watchlistId, setWatchlistId] = useState('');\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  useEffect(() => {\n    fetchMediaItems();\n  }, [watchlistName]);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist,\n      error\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (error) {\n      console.error('Error fetching watchlist:', error.message);\n      return;\n    }\n    if (watchlist) {\n      setWatchlistId(watchlist.id);\n      const {\n        data: media\n      } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id).order('order', {\n        ascending: true\n      });\n      setMediaItems(media || []);\n    }\n  };\n  const onSortEnd = async ({\n    oldIndex,\n    newIndex\n  }) => {\n    const reorderedItems = arrayMove(mediaItems, oldIndex, newIndex);\n    setMediaItems(reorderedItems);\n    try {\n      await Promise.all(reorderedItems.map((item, index) => supabase.from('media_items').update({\n        order: index\n      }).match({\n        id: item.id\n      })));\n    } catch (error) {\n      console.error('Error updating order on backend:', error);\n      fetchMediaItems();\n    }\n  };\n  const onShare = async friendId => {\n    if (!watchlistId) {\n      alert('Watchlist ID not available');\n      return;\n    }\n    const {\n      error\n    } = await supabase.from('watchlist_shares').insert([{\n      watchlist_id: watchlistId,\n      shared_with_user_id: friendId,\n      permission_type: 'edit'\n    }]);\n    if (error) {\n      console.error('Failed to share watchlist:', error.message);\n      alert('Failed to share watchlist.');\n    } else {\n      alert('Watchlist shared successfully!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieSearch, {\n      onSelect: item => handleSelectItem(item, 'movie')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YoutubeSearch, {\n      onSelect: item => handleSelectItem(item, 'youtube')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SortableList, {\n      items: mediaItems,\n      onSortEnd: onSortEnd,\n      onDelete: handleDeleteMediaItem,\n      useDragHandle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ShareWatchlist, {\n      onShare: onShare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"+NajARK6JJVb9avQHiK96MT4Tz8=\", false, function () {\n  return [useParams];\n});\n_c5 = MediaPage;\nexport default MediaPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SortableItem$sortableElement\");\n$RefreshReg$(_c2, \"SortableItem\");\n$RefreshReg$(_c3, \"SortableList$sortableContainer\");\n$RefreshReg$(_c4, \"SortableList\");\n$RefreshReg$(_c5, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","sortableContainer","sortableElement","arrayMoveImmutable","arrayMove","supabase","MovieCard","MovieSearch","YoutubeSearch","ShareWatchlist","jsxDEV","_jsxDEV","SortableItem","_c","item","onDelete","children","id","title","medium","length","date","release_date","substring","synopsis","image","url","fileName","_jsxFileName","lineNumber","columnNumber","_c2","SortableList","_c3","items","map","index","_c4","MediaPage","_s","mediaItems","setMediaItems","watchlistId","setWatchlistId","username","watchlistName","fetchMediaItems","data","watchlist","error","from","select","eq","single","console","message","media","order","ascending","onSortEnd","oldIndex","newIndex","reorderedItems","Promise","all","update","match","onShare","friendId","alert","insert","watchlist_id","shared_with_user_id","permission_type","className","onSelect","handleSelectItem","handleDeleteMediaItem","useDragHandle","_c5","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable as arrayMove } from 'array-move';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport MovieSearch from '../components/common/MovieSearch';\nimport YoutubeSearch from '../components/common/YoutubeSearch';\nimport ShareWatchlist from '../components/common/ShareWatchlist';\n\nconst SortableItem = sortableElement(({ item, onDelete }) => (\n    <div>\n        <MovieCard\n            key={item.id}\n            id={item.id}\n            title={item.title}\n            medium={item.medium}\n            length={item.length}\n            date={item.release_date.substring(0, 4)}\n            synopsis={item.synopsis}\n            image={item.image}\n            url={item.url}\n            onDelete={() => onDelete(item.id, item.medium)}\n        />\n    </div>\n));\n\nconst SortableList = sortableContainer(({ items, onDelete }) => (\n    <div>\n        {items.map((item, index) => (\n            <SortableItem key={item.id} index={index} item={item} onDelete={onDelete} />\n        ))}\n    </div>\n));\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const [watchlistId, setWatchlistId] = useState('');\n    const { username, watchlistName } = useParams();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, [watchlistName]);\n\n    const fetchMediaItems = async () => {\n        const { data: watchlist, error } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (error) {\n            console.error('Error fetching watchlist:', error.message);\n            return;\n        }\n\n        if (watchlist) {\n            setWatchlistId(watchlist.id);\n            const { data: media } = await supabase\n                .from('media_items')\n                .select('*')\n                .eq('watchlist_id', watchlist.id)\n                .order('order', { ascending: true });\n\n            setMediaItems(media || []);\n        }\n    };\n\n    const onSortEnd = async ({ oldIndex, newIndex }) => {\n        const reorderedItems = arrayMove(mediaItems, oldIndex, newIndex);\n        setMediaItems(reorderedItems);\n\n        try {\n            await Promise.all(reorderedItems.map((item, index) =>\n                supabase.from('media_items').update({ order: index }).match({ id: item.id })\n            ));\n        } catch (error) {\n            console.error('Error updating order on backend:', error);\n            fetchMediaItems();\n        }\n    };\n\n    const onShare = async (friendId) => {\n        if (!watchlistId) {\n            alert('Watchlist ID not available');\n            return;\n        }\n\n        const { error } = await supabase\n            .from('watchlist_shares')\n            .insert([{\n                watchlist_id: watchlistId,\n                shared_with_user_id: friendId,\n                permission_type: 'edit'\n            }]);\n\n        if (error) {\n            console.error('Failed to share watchlist:', error.message);\n            alert('Failed to share watchlist.');\n        } else {\n            alert('Watchlist shared successfully!');\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            <MovieSearch onSelect={(item) => handleSelectItem(item, 'movie')} />\n            <YoutubeSearch onSelect={(item) => handleSelectItem(item, 'youtube')} />\n            <SortableList items={mediaItems} onSortEnd={onSortEnd} onDelete={handleDeleteMediaItem} useDragHandle={true} />\n            <ShareWatchlist onShare={onShare} />\n        </div>\n    );\n};\n\nexport default MediaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}