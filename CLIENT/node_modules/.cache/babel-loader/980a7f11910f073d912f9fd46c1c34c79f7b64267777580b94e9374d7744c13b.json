{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const [newMedia, setNewMedia] = useState('');\n  const [medium, setMedium] = useState('Movie');\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  useEffect(() => {\n    fetchMediaItems();\n  }, [watchlistName]);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist,\n      error: watchlistError\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlistError) {\n      console.error('Error fetching watchlist:', watchlistError.message);\n      return;\n    }\n    if (watchlist) {\n      const {\n        data: media,\n        error: mediaError\n      } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id);\n      if (mediaError) {\n        console.error('Error fetching media items:', mediaError.message);\n      } else {\n        setMediaItems(media || []);\n      }\n    }\n  };\n  const addMediaItem = async () => {\n    if (!newMedia || !medium) return;\n    const {\n      data: watchlist\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlist) {\n      const response = await supabase.from('media_items').insert([{\n        title: newMedia,\n        watchlist_id: watchlist.id,\n        medium\n      }]);\n      const newMedium = response.data;\n      if (newMedium && Array.isArray(newMedium)) {\n        setMediaItems(prev => [...prev, ...newMedium]);\n        setNewMedia('');\n        setMedium('Movie');\n      }\n    }\n  };\n  const handleDeleteMediaItem = deletedId => {\n    setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), mediaItems.map(item => /*#__PURE__*/_jsxDEV(MovieCard, {\n      id: item.id,\n      title: item.title,\n      medium: item.medium,\n      length: item.length,\n      date: item.date,\n      synopsis: item.synopsis,\n      onDelete: handleDeleteMediaItem\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMedia,\n      onChange: e => setNewMedia(e.target.value),\n      placeholder: \"Add New Media\",\n      className: \"border p-2 mt-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: medium,\n      onChange: e => setMedium(e.target.value),\n      className: \"border p-2 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Movie\",\n        children: \"Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Book\",\n        children: \"Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"YouTube\",\n        children: \"YouTube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"TV\",\n        children: \"TV Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMediaItem,\n      className: \"ml-2 bg-blue-500 text-white p-2 rounded\",\n      children: \"Add Media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"ACb4GfZ+nvmA1a4amHO2bdRsF7k=\", false, function () {\n  return [useParams];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","supabase","MovieCard","jsxDEV","_jsxDEV","MediaPage","_s","mediaItems","setMediaItems","newMedia","setNewMedia","medium","setMedium","username","watchlistName","fetchMediaItems","data","watchlist","error","watchlistError","from","select","eq","single","console","message","media","mediaError","id","addMediaItem","response","insert","title","watchlist_id","newMedium","Array","isArray","prev","handleDeleteMediaItem","deletedId","currentMediaItems","filter","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","length","date","synopsis","onDelete","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const [newMedia, setNewMedia] = useState('');\n    const [medium, setMedium] = useState('Movie');\n    const { username, watchlistName } = useParams();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, [watchlistName]);\n\n    const fetchMediaItems = async () => {\n        const { data: watchlist, error: watchlistError } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlistError) {\n            console.error('Error fetching watchlist:', watchlistError.message);\n            return;\n        }\n\n        if (watchlist) {\n            const { data: media, error: mediaError } = await supabase\n                .from('media_items')\n                .select('*')\n                .eq('watchlist_id', watchlist.id);\n\n            if (mediaError) {\n                console.error('Error fetching media items:', mediaError.message);\n            } else {\n                setMediaItems(media || []);\n            }\n        }\n    };\n\n    const addMediaItem = async () => {\n        if (!newMedia || !medium) return;\n\n        const { data: watchlist } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlist) {\n            const response = await supabase\n                .from('media_items')\n                .insert([{ title: newMedia, watchlist_id: watchlist.id, medium }]);\n            const newMedium = response.data;\n\n            if (newMedium && Array.isArray(newMedium)) {\n                setMediaItems(prev => [...prev, ...newMedium]);\n                setNewMedia('');\n                setMedium('Movie');\n            }\n        }\n    };\n\n    const handleDeleteMediaItem = (deletedId) => {\n        setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n    };\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            {mediaItems.map((item) => (\n                <MovieCard \n                    key={item.id} \n                    id={item.id} \n                    title={item.title} \n                    medium={item.medium} \n                    length={item.length} \n                    date={item.date} \n                    synopsis={item.synopsis} \n                    onDelete={handleDeleteMediaItem} \n                />\n            ))}\n            <input\n                type=\"text\"\n                value={newMedia}\n                onChange={(e) => setNewMedia(e.target.value)}\n                placeholder=\"Add New Media\"\n                className=\"border p-2 mt-4\"\n            />\n            <select\n                value={medium}\n                onChange={(e) => setMedium(e.target.value)}\n                className=\"border p-2 mt-4\"\n            >\n                <option value=\"Movie\">Movie</option>\n                <option value=\"Book\">Book</option>\n                <option value=\"YouTube\">YouTube</option>\n                <option value=\"TV\">TV Show</option>\n            </select>\n            <button onClick={addMediaItem} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n                Add Media\n            </button>\n        </div>\n    );\n};\n\nexport default MediaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}