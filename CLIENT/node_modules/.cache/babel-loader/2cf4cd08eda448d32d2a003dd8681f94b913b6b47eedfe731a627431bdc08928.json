{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/ShareWatchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareWatchlist = ({\n  onShare\n}) => {\n  _s();\n  const [friends, setFriends] = useState([]);\n  const [selectedFriend, setSelectedFriend] = useState('');\n  useEffect(() => {\n    fetchFriends();\n  }, []);\n  const fetchFriends = async () => {\n    const {\n      data: user,\n      error: userError\n    } = await supabase.auth.getUser();\n    if (userError) {\n      console.error('Error fetching user info:', userError.message);\n      return;\n    }\n    if (!user) return;\n    const {\n      data: friendsData,\n      error\n    } = await supabase.from('friends').select(`\n                friend_id,\n                profile:friend_id (\n                    username\n                )  // Assuming correct foreign key setup for 'profile' as alias\n            `).eq('user_id', user.id).eq('status', 'active').select();\n    if (error) {\n      console.error('Error fetching friends:', error.message);\n    } else {\n      setFriends(friendsData.map(friend => ({\n        id: friend.friend_id,\n        username: friend.profile.username // Accessing the nested username correctly\n      })));\n    }\n  };\n  const handleShare = () => {\n    if (selectedFriend) {\n      onShare(selectedFriend);\n      setSelectedFriend(''); // Reset selection\n    } else {\n      alert('Please select a friend to share the watchlist with.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedFriend,\n      onChange: e => setSelectedFriend(e.target.value),\n      className: \"border p-2 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), friends.map(friend => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: friend.id,\n        children: friend.username\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShare,\n      className: \"ml-2 btn bg-blue-500 hover:bg-blue-700 text-white p-2 rounded\",\n      children: \"Share Watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(ShareWatchlist, \"rqH6pPm8ICXb3IM8iRMNwBNXRk0=\");\n_c = ShareWatchlist;\nexport default ShareWatchlist;\nvar _c;\n$RefreshReg$(_c, \"ShareWatchlist\");","map":{"version":3,"names":["React","useState","useEffect","supabase","jsxDEV","_jsxDEV","ShareWatchlist","onShare","_s","friends","setFriends","selectedFriend","setSelectedFriend","fetchFriends","data","user","error","userError","auth","getUser","console","message","friendsData","from","select","eq","id","map","friend","friend_id","username","profile","handleShare","alert","children","value","onChange","e","target","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/ShareWatchlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { supabase } from '../../supabaseClient';\n\nconst ShareWatchlist = ({ onShare }) => {\n    const [friends, setFriends] = useState([]);\n    const [selectedFriend, setSelectedFriend] = useState('');\n\n    useEffect(() => {\n        fetchFriends();\n    }, []);\n\n    const fetchFriends = async () => {\n        const { data: user, error: userError } = await supabase.auth.getUser();\n        if (userError) {\n            console.error('Error fetching user info:', userError.message);\n            return;\n        }\n\n        if (!user) return;\n\n        const { data: friendsData, error } = await supabase\n            .from('friends')\n            .select(`\n                friend_id,\n                profile:friend_id (\n                    username\n                )  // Assuming correct foreign key setup for 'profile' as alias\n            `)\n            .eq('user_id', user.id)\n            .eq('status', 'active')\n            .select();\n\n        if (error) {\n            console.error('Error fetching friends:', error.message);\n        } else {\n            setFriends(friendsData.map(friend => ({\n                id: friend.friend_id,\n                username: friend.profile.username  // Accessing the nested username correctly\n            })));\n        }\n    };\n\n    const handleShare = () => {\n        if (selectedFriend) {\n            onShare(selectedFriend);\n            setSelectedFriend('');  // Reset selection\n        } else {\n            alert('Please select a friend to share the watchlist with.');\n        }\n    };\n\n    return (\n        <div>\n            <select value={selectedFriend} onChange={(e) => setSelectedFriend(e.target.value)} className=\"border p-2 rounded\">\n                <option value=\"\">Select a friend</option>\n                {friends.map(friend => (\n                    <option key={friend.id} value={friend.id}>\n                        {friend.username}\n                    </option>\n                ))}\n            </select>\n            <button onClick={handleShare} className=\"ml-2 btn bg-blue-500 hover:bg-blue-700 text-white p-2 rounded\">\n                Share Watchlist\n            </button>\n        </div>\n    );\n};\n\nexport default ShareWatchlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}