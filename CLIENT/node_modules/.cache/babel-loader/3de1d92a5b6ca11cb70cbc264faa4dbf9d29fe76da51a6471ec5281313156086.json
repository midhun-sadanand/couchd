{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { supabase } from '../supabaseClient';\n// import MovieCard from '../components/common/MovieCard';\n\n// const MediaPage = () => {\n//     const [mediaItems, setMediaItems] = useState([]);\n//     const [newMedia, setNewMedia] = useState('');\n//     const [medium, setMedium] = useState('Movie');\n//     const { username, watchlistName } = useParams();\n\n//     useEffect(() => {\n//         fetchMediaItems();\n//     }, [watchlistName]);\n\n//     const fetchMediaItems = async () => {\n//         const { data: watchlist } = await supabase\n//             .from('watchlists')\n//             .select('id')\n//             .eq('name', watchlistName)\n//             .single();\n\n//         if (watchlist) {\n//             const { data: media } = await supabase\n//                 .from('media_items')\n//                 .select('*')\n//                 .eq('watchlist_id', watchlist.id);\n\n//             setMediaItems(media || []);\n//         }\n//     };\n\n//     const addMediaItem = async () => {\n//         if (!newMedia || !medium) return;\n\n//         const { data: watchlist } = await supabase\n//             .from('watchlists')\n//             .select('id')\n//             .eq('name', watchlistName)\n//             .single();\n\n//         if (watchlist) {\n//             const { data: newMedium } = await supabase\n//                 .from('media_items')\n//                 .insert([{ title: newMedia, watchlist_id: watchlist.id, medium }])\n//                 .select();\n\n//             if (newMedium) {\n//                 setMediaItems([...mediaItems, ...newMedium]);\n//                 setNewMedia('');\n//                 setMedium('Movie');\n//             }\n//         }\n//     };\n\n//     const handleDeleteMediaItem = (deletedId) => {\n//         setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n//     };\n\n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n//             {mediaItems.map((item) => (\n//                 <MovieCard \n//                     key={item.id} \n//                     id={item.id} \n//                     title={item.title} \n//                     medium={item.medium} \n//                     length={item.length} \n//                     date={item.date} \n//                     synopsis={item.synopsis} \n//                     onDelete={handleDeleteMediaItem} \n//                 />\n\n//             ))}\n//             <input\n//                 type=\"text\"\n//                 value={newMedia}\n//                 onChange={(e) => setNewMedia(e.target.value)}\n//                 placeholder=\"Add New Media\"\n//                 className=\"border p-2 mt-4\"\n//             />\n//             <select\n//                 value={medium}\n//                 onChange={(e) => setMedium(e.target.value)}\n//                 className=\"border p-2 mt-4\"\n//             >\n//                 <option value=\"Movie\">Movie</option>\n//                 <option value=\"Book\">Book</option>\n//                 <option value=\"YouTube\">YouTube</option>\n//                 <option value=\"TV\">TV Show</option>\n//             </select>\n//             <button onClick={addMediaItem} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n//                 Add Media\n//             </button>\n//         </div>\n//     );\n// };\n\n// export default MediaPage;","map":{"version":3,"names":[],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { supabase } from '../supabaseClient';\n// import MovieCard from '../components/common/MovieCard';\n\n// const MediaPage = () => {\n//     const [mediaItems, setMediaItems] = useState([]);\n//     const [newMedia, setNewMedia] = useState('');\n//     const [medium, setMedium] = useState('Movie');\n//     const { username, watchlistName } = useParams();\n\n//     useEffect(() => {\n//         fetchMediaItems();\n//     }, [watchlistName]);\n\n//     const fetchMediaItems = async () => {\n//         const { data: watchlist } = await supabase\n//             .from('watchlists')\n//             .select('id')\n//             .eq('name', watchlistName)\n//             .single();\n\n//         if (watchlist) {\n//             const { data: media } = await supabase\n//                 .from('media_items')\n//                 .select('*')\n//                 .eq('watchlist_id', watchlist.id);\n                \n//             setMediaItems(media || []);\n//         }\n//     };\n\n//     const addMediaItem = async () => {\n//         if (!newMedia || !medium) return;\n\n//         const { data: watchlist } = await supabase\n//             .from('watchlists')\n//             .select('id')\n//             .eq('name', watchlistName)\n//             .single();\n\n//         if (watchlist) {\n//             const { data: newMedium } = await supabase\n//                 .from('media_items')\n//                 .insert([{ title: newMedia, watchlist_id: watchlist.id, medium }])\n//                 .select();\n\n//             if (newMedium) {\n//                 setMediaItems([...mediaItems, ...newMedium]);\n//                 setNewMedia('');\n//                 setMedium('Movie');\n//             }\n//         }\n//     };\n    \n//     const handleDeleteMediaItem = (deletedId) => {\n//         setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n//     };\n    \n//     return (\n//         <div className=\"container mx-auto p-4\">\n//             <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n//             {mediaItems.map((item) => (\n//                 <MovieCard \n//                     key={item.id} \n//                     id={item.id} \n//                     title={item.title} \n//                     medium={item.medium} \n//                     length={item.length} \n//                     date={item.date} \n//                     synopsis={item.synopsis} \n//                     onDelete={handleDeleteMediaItem} \n//                 />\n            \n//             ))}\n//             <input\n//                 type=\"text\"\n//                 value={newMedia}\n//                 onChange={(e) => setNewMedia(e.target.value)}\n//                 placeholder=\"Add New Media\"\n//                 className=\"border p-2 mt-4\"\n//             />\n//             <select\n//                 value={medium}\n//                 onChange={(e) => setMedium(e.target.value)}\n//                 className=\"border p-2 mt-4\"\n//             >\n//                 <option value=\"Movie\">Movie</option>\n//                 <option value=\"Book\">Book</option>\n//                 <option value=\"YouTube\">YouTube</option>\n//                 <option value=\"TV\">TV Show</option>\n//             </select>\n//             <button onClick={addMediaItem} className=\"ml-2 bg-blue-500 text-white p-2 rounded\">\n//                 Add Media\n//             </button>\n//         </div>\n//     );\n// };\n\n// export default MediaPage;\n"],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}