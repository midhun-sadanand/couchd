{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable as arrayMove } from 'array-move';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport Search from '../components/common/MovieSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableItem = sortableElement(_c = ({\n  item,\n  onDelete\n}) => /*#__PURE__*/_jsxDEV(MovieCard, {\n  id: item.id,\n  title: item.title,\n  medium: item.medium,\n  length: item.length,\n  date: item.release_date.substring(0, 4),\n  synopsis: item.synopsis,\n  image: item.image,\n  onDelete: () => onDelete(item.id, item.medium)\n}, item.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 3\n}, this));\n_c2 = SortableItem;\nconst SortableList = sortableContainer(_c3 = ({\n  items,\n  onDelete\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SortableItem, {\n      index: index,\n      item: item,\n      onDelete: onDelete\n    }, `item-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n});\n_c4 = SortableList;\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  useEffect(() => {\n    fetchMediaItems();\n  }, [watchlistName]);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlist) {\n      const {\n        data: media\n      } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id).order('order', {\n        ascending: true\n      });\n      setMediaItems(media || []);\n    }\n  };\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    const reorderedItems = arrayMove(mediaItems, oldIndex, newIndex);\n    setMediaItems(reorderedItems);\n    // Update the order in the database\n    reorderedItems.forEach(async (item, index) => {\n      await supabase.from('media_items').update({\n        order: index\n      }).match({\n        id: item.id\n      });\n    });\n  };\n  const handleSelectItem = async item => {\n    const imageUrl = item.poster_path ? `https://image.tmdb.org/t/p/w500${item.poster_path}` : '';\n    const {\n      data: newMedia,\n      error\n    } = await supabase.from('media_items').insert([{\n      title: item.title || item.name,\n      medium: item.media_type === 'movie' ? 'Movie' : 'TV',\n      watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id,\n      image: imageUrl,\n      release_date: item.release_date || '',\n      order: mediaItems.length // Assigning the next order index\n    }]).select();\n    if (error) {\n      console.error('Failed to add item:', error.message);\n    } else {\n      setMediaItems([...mediaItems, ...newMedia]);\n    }\n  };\n  const handleDeleteMediaItem = async (deletedId, medium) => {\n    if (window.confirm(`Are you sure you want to delete this ${medium}?`)) {\n      const {\n        error\n      } = await supabase.from('media_items').delete().match({\n        id: deletedId\n      });\n      if (error) {\n        console.error('Error deleting media item:', error.message);\n      } else {\n        setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n      }\n    }\n  };\n  console.log(\"THESE ARE DA ITEMS: \", mediaItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSelect: handleSelectItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SortableList, {\n      items: mediaItems,\n      onSortEnd: onSortEnd,\n      onDelete: handleDeleteMediaItem,\n      useDragHandle: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"nSxNltxDdxPCkkK8l9LQtH6BqKA=\", false, function () {\n  return [useParams];\n});\n_c5 = MediaPage;\nexport default MediaPage;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SortableItem$sortableElement\");\n$RefreshReg$(_c2, \"SortableItem\");\n$RefreshReg$(_c3, \"SortableList$sortableContainer\");\n$RefreshReg$(_c4, \"SortableList\");\n$RefreshReg$(_c5, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","sortableContainer","sortableElement","arrayMoveImmutable","arrayMove","supabase","MovieCard","Search","jsxDEV","_jsxDEV","SortableItem","_c","item","onDelete","id","title","medium","length","date","release_date","substring","synopsis","image","fileName","_jsxFileName","lineNumber","columnNumber","_c2","SortableList","_c3","items","children","map","index","_c4","MediaPage","_s","mediaItems","setMediaItems","username","watchlistName","fetchMediaItems","data","watchlist","from","select","eq","single","media","order","ascending","onSortEnd","oldIndex","newIndex","reorderedItems","forEach","update","match","handleSelectItem","imageUrl","poster_path","newMedia","error","insert","name","media_type","watchlist_id","console","message","handleDeleteMediaItem","deletedId","window","confirm","delete","currentMediaItems","filter","log","className","onSelect","useDragHandle","_c5","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable as arrayMove } from 'array-move';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport Search from '../components/common/MovieSearch';\n\nconst SortableItem = sortableElement(({ item, onDelete }) => (\n  <MovieCard\n    key={item.id}\n    id={item.id}\n    title={item.title}\n    medium={item.medium}\n    length={item.length}\n    date={item.release_date.substring(0, 4)}\n    synopsis={item.synopsis}\n    image={item.image}\n    onDelete={() => onDelete(item.id, item.medium)}\n  />\n));\n\nconst SortableList = sortableContainer(({ items, onDelete }) => {\n  return (\n    <div>\n      {items.map((item, index) => (\n        <SortableItem key={`item-${index}`} index={index} item={item} onDelete={onDelete} />\n      ))}\n    </div>\n  );\n});\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const { username, watchlistName } = useParams();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, [watchlistName]);\n\n    const fetchMediaItems = async () => {\n        const { data: watchlist } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlist) {\n            const { data: media } = await supabase\n                .from('media_items')\n                .select('*')\n                .eq('watchlist_id', watchlist.id)\n                .order('order', { ascending: true });\n\n            setMediaItems(media || []);\n        }\n    };\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        const reorderedItems = arrayMove(mediaItems, oldIndex, newIndex);\n        setMediaItems(reorderedItems);\n        // Update the order in the database\n        reorderedItems.forEach(async (item, index) => {\n            await supabase\n                .from('media_items')\n                .update({ order: index })\n                .match({ id: item.id });\n        });\n    };\n\n\n    const handleSelectItem = async (item) => {\n        const imageUrl = item.poster_path ? `https://image.tmdb.org/t/p/w500${item.poster_path}` : '';\n        const { data: newMedia, error } = await supabase\n            .from('media_items')\n            .insert([{\n                title: item.title || item.name,\n                medium: item.media_type === 'movie' ? 'Movie' : 'TV',\n                watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id,\n                image: imageUrl,\n                release_date: item.release_date || '',\n                order: mediaItems.length  // Assigning the next order index\n            }])\n            .select();\n\n        if (error) {\n            console.error('Failed to add item:', error.message);\n        } else {\n            setMediaItems([...mediaItems, ...newMedia]);\n        }\n    };\n\n    const handleDeleteMediaItem = async (deletedId, medium) => {\n        if (window.confirm(`Are you sure you want to delete this ${medium}?`)) {\n            const { error } = await supabase\n                .from('media_items')\n                .delete()\n                .match({ id: deletedId });\n\n            if (error) {\n                console.error('Error deleting media item:', error.message);\n            } else {\n                setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n            }\n        }\n    };\n\n    console.log(\"THESE ARE DA ITEMS: \", mediaItems);\n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            <Search onSelect={handleSelectItem} />\n            <SortableList items={mediaItems} onSortEnd={onSortEnd} onDelete={handleDeleteMediaItem} useDragHandle={true} />\n        </div>\n    );\n};\n\nexport default MediaPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}