{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/YoutubeSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YoutubeSearch = ({\n  onSelect\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [videos, setVideos] = useState([]);\n  const fetchVideos = async () => {\n    if (query.length < 3) {\n      setVideos([]);\n      return;\n    }\n    const API_KEY = 'AIzaSyAjxXnuRYFH5M8w8-QAZ7yXt1Di8b1OH70'; // Replace this with your YouTube Data API key\n    const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(query)}&type=video&maxResults=10&key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    if (data.items) {\n      setVideos(data.items);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search YouTube Videos\",\n      value: query,\n      onChange: e => {\n        setQuery(e.target.value);\n        fetchVideos();\n      },\n      className: \"border p-2 w-full\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cursor-pointer hover:bg-gray-200 p-2\",\n        onClick: () => onSelect(video),\n        children: [video.snippet.title, \" - \", new Date(video.snippet.publishedAt).getFullYear()]\n      }, video.id.videoId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(YoutubeSearch, \"L6k+Mf7rRiPuPop65A5nATEw6TQ=\");\n_c = YoutubeSearch;\nexport default YoutubeSearch;\nvar _c;\n$RefreshReg$(_c, \"YoutubeSearch\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YoutubeSearch","onSelect","_s","query","setQuery","videos","setVideos","fetchVideos","length","API_KEY","url","encodeURIComponent","response","fetch","data","json","items","children","type","placeholder","value","onChange","e","target","className","fileName","_jsxFileName","lineNumber","columnNumber","map","video","onClick","snippet","title","Date","publishedAt","getFullYear","id","videoId","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/YoutubeSearch.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst YoutubeSearch = ({ onSelect }) => {\n    const [query, setQuery] = useState('');\n    const [videos, setVideos] = useState([]);\n\n    const fetchVideos = async () => {\n        if (query.length < 3) {\n            setVideos([]);\n            return;\n        }\n\n        const API_KEY = 'AIzaSyAjxXnuRYFH5M8w8-QAZ7yXt1Di8b1OH70'; // Replace this with your YouTube Data API key\n        const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(query)}&type=video&maxResults=10&key=${API_KEY}`;\n\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.items) {\n            setVideos(data.items);\n        }\n    };\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"Search YouTube Videos\"\n                value={query}\n                onChange={e => { setQuery(e.target.value); fetchVideos(); }}\n                className=\"border p-2 w-full\"\n            />\n            <div>\n                {videos.map((video) => (\n                    <div\n                        key={video.id.videoId}\n                        className=\"cursor-pointer hover:bg-gray-200 p-2\"\n                        onClick={() => onSelect(video)}\n                    >\n                        {video.snippet.title} - {new Date(video.snippet.publishedAt).getFullYear()}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default YoutubeSearch;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;MAClBF,SAAS,CAAC,EAAE,CAAC;MACb;IACJ;IAEA,MAAMG,OAAO,GAAG,yCAAyC,CAAC,CAAC;IAC3D,MAAMC,GAAG,GAAI,+DAA8DC,kBAAkB,CAACR,KAAK,CAAE,iCAAgCM,OAAQ,EAAC;IAE9I,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,KAAK,EAAE;MACZV,SAAS,CAACQ,IAAI,CAACE,KAAK,CAAC;IACzB;EACJ,CAAC;EAED,oBACIjB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCC,KAAK,EAAEjB,KAAM;MACbkB,QAAQ,EAAEC,CAAC,IAAI;QAAElB,QAAQ,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAEb,WAAW,CAAC,CAAC;MAAE,CAAE;MAC5DiB,SAAS,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF7B,OAAA;MAAAkB,QAAA,EACKZ,MAAM,CAACwB,GAAG,CAAEC,KAAK,iBACd/B,OAAA;QAEIyB,SAAS,EAAC,sCAAsC;QAChDO,OAAO,EAAEA,CAAA,KAAM9B,QAAQ,CAAC6B,KAAK,CAAE;QAAAb,QAAA,GAE9Ba,KAAK,CAACE,OAAO,CAACC,KAAK,EAAC,KAAG,EAAC,IAAIC,IAAI,CAACJ,KAAK,CAACE,OAAO,CAACG,WAAW,CAAC,CAACC,WAAW,CAAC,CAAC;MAAA,GAJrEN,KAAK,CAACO,EAAE,CAACC,OAAO;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKpB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA1CIF,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}