{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport Search from '../components/common/Search'; // Ensure path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MediaPage = () => {\n  _s();\n  const [mediaItems, setMediaItems] = useState([]);\n  const {\n    username,\n    watchlistName\n  } = useParams();\n  useEffect(() => {\n    fetchMediaItems();\n  }, [watchlistName]);\n  const fetchMediaItems = async () => {\n    const {\n      data: watchlist\n    } = await supabase.from('watchlists').select('id').eq('name', watchlistName).single();\n    if (watchlist) {\n      const {\n        data: media\n      } = await supabase.from('media_items').select('*').eq('watchlist_id', watchlist.id);\n      setMediaItems(media || []);\n    }\n  };\n  const handleSelectItem = async item => {\n    // Assuming item has a title and id that match your media_items schema\n    const {\n      data: newMedia,\n      error\n    } = await supabase.from('media_items').insert([{\n      title: item.title || item.name,\n      medium: item.media_type === 'movie' ? 'Movie' : 'TV',\n      release_date: item.release_date ? item.release_date.substring(0, 4) : null,\n      watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id\n    }]).select();\n    console.log(\"MEDIA ITEM:\", newMedia);\n    if (error) {\n      console.error('Failed to add item:', error.message);\n    } else {\n      setMediaItems([...mediaItems, ...newMedia]);\n    }\n  };\n  const handleDeleteMediaItem = async (deletedId, medium) => {\n    if (window.confirm(`Are you sure you want to delete this ${medium}?`)) {\n      const {\n        error\n      } = await supabase.from('media_items').delete().match({\n        id: deletedId\n      });\n      if (error) {\n        console.error('Error deleting media item:', error.message);\n      } else {\n        setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: `Media in \"${watchlistName}\"`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSelect: handleSelectItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), mediaItems.map(item => /*#__PURE__*/_jsxDEV(MovieCard, {\n      id: item.id,\n      title: item.title,\n      medium: item.medium,\n      length: item.length,\n      date: item.release_date,\n      synopsis: item.synopsis,\n      onDelete: () => handleDeleteMediaItem(item.id, item.medium) // Modified\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(MediaPage, \"nSxNltxDdxPCkkK8l9LQtH6BqKA=\", false, function () {\n  return [useParams];\n});\n_c = MediaPage;\nexport default MediaPage;\nvar _c;\n$RefreshReg$(_c, \"MediaPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","supabase","MovieCard","Search","jsxDEV","_jsxDEV","MediaPage","_s","mediaItems","setMediaItems","username","watchlistName","fetchMediaItems","data","watchlist","from","select","eq","single","media","id","handleSelectItem","item","newMedia","error","insert","title","name","medium","media_type","release_date","substring","watchlist_id","console","log","message","handleDeleteMediaItem","deletedId","window","confirm","delete","match","currentMediaItems","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","map","length","date","synopsis","onDelete","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport MovieCard from '../components/common/MovieCard';\nimport Search from '../components/common/Search';  // Ensure path is correct\n\nconst MediaPage = () => {\n    const [mediaItems, setMediaItems] = useState([]);\n    const { username, watchlistName } = useParams();\n\n    useEffect(() => {\n        fetchMediaItems();\n    }, [watchlistName]);\n\n    const fetchMediaItems = async () => {\n        const { data: watchlist } = await supabase\n            .from('watchlists')\n            .select('id')\n            .eq('name', watchlistName)\n            .single();\n\n        if (watchlist) {\n            const { data: media } = await supabase\n                .from('media_items')\n                .select('*')\n                .eq('watchlist_id', watchlist.id);\n\n            setMediaItems(media || []);\n        }\n    };\n\n    const handleSelectItem = async (item) => {\n        // Assuming item has a title and id that match your media_items schema\n        const { data: newMedia, error } = await supabase\n            .from('media_items')\n            .insert([{\n                title: item.title || item.name,\n                medium: item.media_type === 'movie' ? 'Movie' : 'TV',\n                release_date: item.release_date ? item.release_date.substring(0, 4) : null,\n                watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id\n            }])\n            .select();\n\n        console.log(\"MEDIA ITEM:\", newMedia);\n\n        if (error) {\n            console.error('Failed to add item:', error.message);\n        } else {\n            setMediaItems([...mediaItems, ...newMedia]);\n        }\n    };\n\n    const handleDeleteMediaItem = async (deletedId, medium) => {\n        if (window.confirm(`Are you sure you want to delete this ${medium}?`)) {\n            const { error } = await supabase\n                .from('media_items')\n                .delete()\n                .match({ id: deletedId });\n    \n            if (error) {\n                console.error('Error deleting media item:', error.message);\n            } else {\n                setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n            }\n        }\n    };\n    \n\n    return (\n        <div className=\"container mx-auto p-4\">\n            <h1 className=\"text-xl font-bold\">{`Media in \"${watchlistName}\"`}</h1>\n            <Search onSelect={handleSelectItem} />\n            {mediaItems.map((item) => (\n                <MovieCard \n                    key={item.id} \n                    id={item.id} \n                    title={item.title} \n                    medium={item.medium} \n                    length={item.length} \n                    date={item.release_date} \n                    synopsis={item.synopsis}\n                    onDelete={() => handleDeleteMediaItem(item.id, item.medium)}  // Modified\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default MediaPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}