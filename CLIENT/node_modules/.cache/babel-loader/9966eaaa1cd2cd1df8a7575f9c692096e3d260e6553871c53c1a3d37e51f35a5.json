{"ast":null,"code":"const handleSelectItem = async (item, type) => {\n  let newMedia;\n  if (type === 'youtube') {\n    const videoUrl = `https://www.youtube.com/watch?v=${item.id.videoId}`;\n    const imageUrl = item.snippet.thumbnails.high.url;\n    newMedia = await supabase.from('media_items').insert([{\n      title: item.snippet.title,\n      medium: 'YouTube',\n      watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id,\n      image: imageUrl,\n      url: videoUrl,\n      // Storing YouTube video URL\n      release_date: item.snippet.publishedAt.substring(0, 10),\n      order: mediaItems.length\n    }]).select();\n  } else {\n    const imageUrl = item.poster_path ? `https://image.tmdb.org/t/p/w500${item.poster_path}` : '';\n    newMedia = await supabase.from('media_items').insert([{\n      title: item.title || item.name,\n      medium: item.media_type === 'movie' ? 'Movie' : 'TV',\n      watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id,\n      image: imageUrl,\n      release_date: item.release_date || '',\n      order: mediaItems.length\n    }]).select();\n  }\n  const {\n    data,\n    error\n  } = newMedia;\n  if (error) {\n    console.error('Failed to add item:', error.message);\n  } else {\n    setMediaItems([...mediaItems, ...data]);\n  }\n};\nconst handleDeleteMediaItem = async (deletedId, medium) => {\n  if (window.confirm(`Are you sure you want to delete this ${medium}?`)) {\n    const {\n      error\n    } = await supabase.from('media_items').delete().match({\n      id: deletedId\n    });\n    if (error) {\n      console.error('Error deleting media item:', error.message);\n    } else {\n      setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n    }\n  }\n};","map":{"version":3,"names":["handleSelectItem","item","type","newMedia","videoUrl","id","videoId","imageUrl","snippet","thumbnails","high","url","supabase","from","insert","title","medium","watchlist_id","select","eq","watchlistName","single","data","image","release_date","publishedAt","substring","order","mediaItems","length","poster_path","name","media_type","error","console","message","setMediaItems","handleDeleteMediaItem","deletedId","window","confirm","delete","match","currentMediaItems","filter"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/pages/MediaPage.js"],"sourcesContent":["const handleSelectItem = async (item, type) => {\n    let newMedia;\n    if (type === 'youtube') {\n        const videoUrl = `https://www.youtube.com/watch?v=${item.id.videoId}`;\n        const imageUrl = item.snippet.thumbnails.high.url;\n        newMedia = await supabase.from('media_items').insert([{\n            title: item.snippet.title,\n            medium: 'YouTube',\n            watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id,\n            image: imageUrl,\n            url: videoUrl,  // Storing YouTube video URL\n            release_date: item.snippet.publishedAt.substring(0, 10),\n            order: mediaItems.length\n        }])\n        .select();\n    } else { \n        const imageUrl = item.poster_path ? `https://image.tmdb.org/t/p/w500${item.poster_path}` : '';\n        newMedia = await supabase.from('media_items').insert([{\n            title: item.title || item.name,\n            medium: item.media_type === 'movie' ? 'Movie' : 'TV',\n            watchlist_id: (await supabase.from('watchlists').select('id').eq('name', watchlistName).single()).data.id,\n            image: imageUrl,\n            release_date: item.release_date || '',\n            order: mediaItems.length\n        }])\n        .select();\n    }\n\n    const { data, error } = newMedia;\n    if (error) {\n        console.error('Failed to add item:', error.message);\n    } else {\n        setMediaItems([...mediaItems, ...data]);\n    }\n};    \n\nconst handleDeleteMediaItem = async (deletedId, medium) => {\n    if (window.confirm(`Are you sure you want to delete this ${medium}?`)) {\n        const { error } = await supabase\n            .from('media_items')\n            .delete()\n            .match({ id: deletedId });\n\n        if (error) {\n            console.error('Error deleting media item:', error.message);\n        } else {\n            setMediaItems(currentMediaItems => currentMediaItems.filter(item => item.id !== deletedId));\n        }\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}