{"ast":null,"code":"var _jsxFileName = \"/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/FriendRequests.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FriendRequestsDropdown = ({\n  userId\n}) => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  useEffect(() => {\n    if (!userId) return;\n    const fetchRequests = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('friend_requests').select(`\n                    id,\n                    status,\n                    sender_id, // Changed from sender:sender_id(username) to simplify\n                    sender:sender_id (username)  // Assuming correct foreign key setup\n                `).eq('receiver_id', userId).eq('status', 'pending');\n      if (error) {\n        console.error('Error fetching friend requests:', error.message);\n      } else {\n        setRequests(data || []);\n      }\n    };\n    fetchRequests();\n  }, [userId]);\n  const handleResponse = async (requestId, status) => {\n    const {\n      error: updateError,\n      data: updateData\n    } = await supabase.from('friend_requests').update({\n      status\n    }).match({\n      id: requestId\n    });\n    if (updateError) {\n      console.error('Error updating friend request:', updateError.message);\n    } else if (status === 'accepted') {\n      // Find the sender_id from the requests to add to the friends table\n      const request = requests.find(req => req.id === requestId);\n      if (request) {\n        const {\n          error: insertError\n        } = await supabase.from('friends').insert([{\n          user_id: userId,\n          friend_id: request.sender_id,\n          status: 'active'\n        }, {\n          user_id: request.sender_id,\n          friend_id: userId,\n          status: 'active'\n        } // This ensures that the friendship is bidirectional\n        ]);\n        if (insertError) {\n          console.error('Error adding friend:', insertError.message);\n        }\n      }\n      // Remove the request from the list\n      setRequests(prev => prev.filter(request => request.id !== requestId));\n    } else {\n      // Just remove the request for 'rejected'\n      setRequests(prev => prev.filter(request => request.id !== requestId));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowDropdown(!showDropdown),\n      className: \"btn\",\n      children: [\"Friend Requests (\", requests.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), showDropdown && requests.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-white shadow-md mt-2 rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: requests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"p-2 border-b border-gray-200\",\n          children: [\"Request from \", request.sender ? request.sender.username : \"Unknown\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse(request.id, 'accepted'),\n            className: \"ml-2 btn bg-green-500 hover:bg-green-600\",\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResponse(request.id, 'rejected'),\n            className: \"ml-2 btn bg-red-500 hover:bg-red-600\",\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)]\n        }, request.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(FriendRequestsDropdown, \"rPC3MXLN/Pkokjo5V/r+u4Wc8ME=\");\n_c = FriendRequestsDropdown;\nexport default FriendRequestsDropdown;\nvar _c;\n$RefreshReg$(_c, \"FriendRequestsDropdown\");","map":{"version":3,"names":["FriendRequestsDropdown","userId","_s","requests","setRequests","useState","showDropdown","setShowDropdown","useEffect","fetchRequests","data","error","supabase","from","select","eq","console","message","handleResponse","requestId","status","updateError","updateData","update","match","id","request","find","req","insertError","insert","user_id","friend_id","sender_id","prev","filter","_jsxDEV","children","onClick","className","length","fileName","_jsxFileName","lineNumber","columnNumber","map","sender","username","_c","$RefreshReg$"],"sources":["/Users/midhu1/Projects/mediaconsumption/CLIENT/src/components/common/FriendRequests.js"],"sourcesContent":["const FriendRequestsDropdown = ({ userId }) => {\n    const [requests, setRequests] = useState([]);\n    const [showDropdown, setShowDropdown] = useState(false);\n\n    useEffect(() => {\n        if (!userId) return;\n\n        const fetchRequests = async () => {\n            const { data, error } = await supabase\n                .from('friend_requests')\n                .select(`\n                    id,\n                    status,\n                    sender_id, // Changed from sender:sender_id(username) to simplify\n                    sender:sender_id (username)  // Assuming correct foreign key setup\n                `)\n                .eq('receiver_id', userId)\n                .eq('status', 'pending');\n\n            if (error) {\n                console.error('Error fetching friend requests:', error.message);\n            } else {\n                setRequests(data || []);\n            }\n        };\n\n        fetchRequests();\n    }, [userId]);\n\n    const handleResponse = async (requestId, status) => {\n        const { error: updateError, data: updateData } = await supabase\n            .from('friend_requests')\n            .update({ status })\n            .match({ id: requestId });\n\n        if (updateError) {\n            console.error('Error updating friend request:', updateError.message);\n        } else if (status === 'accepted') {\n            // Find the sender_id from the requests to add to the friends table\n            const request = requests.find(req => req.id === requestId);\n            if (request) {\n                const { error: insertError } = await supabase\n                    .from('friends')\n                    .insert([\n                        { user_id: userId, friend_id: request.sender_id, status: 'active' },\n                        { user_id: request.sender_id, friend_id: userId, status: 'active' }  // This ensures that the friendship is bidirectional\n                    ]);\n\n                if (insertError) {\n                    console.error('Error adding friend:', insertError.message);\n                }\n            }\n            // Remove the request from the list\n            setRequests(prev => prev.filter(request => request.id !== requestId));\n        } else {\n            // Just remove the request for 'rejected'\n            setRequests(prev => prev.filter(request => request.id !== requestId));\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={() => setShowDropdown(!showDropdown)} className=\"btn\">\n                Friend Requests ({requests.length})\n            </button>\n            {showDropdown && requests.length > 0 && (\n                <div className=\"absolute bg-white shadow-md mt-2 rounded\">\n                    <ul>\n                        {requests.map(request => (\n                            <li key={request.id} className=\"p-2 border-b border-gray-200\">\n                                Request from {request.sender ? request.sender.username : \"Unknown\"}\n                                <button onClick={() => handleResponse(request.id, 'accepted')} className=\"ml-2 btn bg-green-500 hover:bg-green-600\">\n                                    Accept\n                                </button>\n                                <button onClick={() => handleResponse(request.id, 'rejected')} className=\"ml-2 btn bg-red-500 hover:bg-red-600\">\n                                    Reject\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default FriendRequestsDropdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}